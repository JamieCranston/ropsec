% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gpg-store.R
\name{store_public_key}
\alias{store_public_key}
\title{Add a public key to your GitHub or gitlab or other account}
\usage{
store_public_key(key, service = NULL, .token = NULL,
  gitlab_url = NULL, open_url = is_interactive())
}
\arguments{
\item{key}{A character string containing the ID of a key to use, use the
return value of \code{\link[=sign_commits_with_key]{sign_commits_with_key()}}. If you are not sure, what key
you want to use, you can list your locally available keys with
\code{\link[gpg:gpg_list_keys]{gpg::gpg_list_keys()}}. The email address corresponding to this key must be
identical to the email address that you use with GitHub/Gitlab etc.}

\item{service}{NULL currently supported services: \code{"gh"} for GitHub (access
token is necessary) or \code{"gl"} for gitlab (url and access token is
necessary). If left NULL, no upload is attempted, public key is returned
for manual upload.}

\item{.token}{Either GitHub Personal Access Token with at least
\code{write:gpg_key} scope enabled. You can grant access to tokens
\href{https://github.com/settings/tokens}{here}. Supply this with \code{service = "gh"}. Or Gitlab personal access token with at least \code{api} scope enabled.
Supply this with \code{service = "gl"}. If your PAT is stored in an environment
variable \code{GITHUB_PAT} (for \code{service = "gh"}) or \code{GITLAB_PAT} (for \code{service = "gl"}) you do not need to supply the token manually.}

\item{gitlab_url}{NULL by default, or your gitlab url for \code{service = "gl"}.}

\item{open_url}{logical, whether open relevant URLs automatically.}
}
\description{
\code{store_public_key()} adds the public key associated with a key ID to your
GitHub or Gitlab account if token is available. Otherwise it will print the
public key for you to copy manually into GitHub/Gitlab or elsewhere.
}
\details{
If you do not have a Personal Access Token set up or you want to store your
key on other service you can either call this function without a token and
then add the printed public key manually or call \code{cat(}\code{\link[gpg:gpg_export]{gpg::gpg_export()}}\code{)}
with \code{newkey} and add the returned public key manually. For more information
see \href{https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/}{GitHub tokens}
or \href{https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html}{gitlab tokens}.
}
\examples{
\dontrun{
new_key <- sign_commits_with_key("John Doe", "johndoe@example.com")
# if you do not have personal access token for github
store_public_key(key = new_key)
# if your GitHub Personal Access Token is stored in `.Renviron` as MY_GITHUB_PAT
store_public_key(key = new_key, .token = Sys.getenv('MY_GITHUB_PAT'))
}
}
